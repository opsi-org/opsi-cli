image: python:3.7-stretch

stages:
  - test
  - build

.install_tools: &install_tools |
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install debhelper osc
  pip3 install poetry

test:pylint-pytest:
  stage: test
  script:
    - *install_tools
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build #for postinst command dir stuff
    #- poetry run pylint --errors-only opsicli
    - poetry run pylint --disable=R,C opsicli
    - poetry run pytest

build:linux-pyinstaller:
  stage: build
  script:
    - *install_tools
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - '[ "$CI_COMMIT_TAG" = "" ] && poetry run opsi-dev-tool -l info --binary-push dist/opsicli "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || poetry run opsi-dev-tool -l info --binary-push dist/opsicli'

build:windows-pyinstaller:
  stage: build
  tags:
    - win10
  script:
    - pip install poetry
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - if (! $CI_COMMIT_TAG) {poetry run opsi-dev-tool -l info --binary-push dist/opsicli "$CI_JOB_ID"}
    - if ($CI_COMMIT_TAG) {poetry run opsi-dev-tool -l info --binary-push dist/opsicli}

build:osx-pyinstaller:
  stage: build
  tags:
    - macos
  script:
    - source $HOME/.poetry/env
    - poetry config experimental.new-installer false
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - '[ "$CI_COMMIT_TAG" = "" ] && poetry run opsi-dev-tool -l info --binary-push dist/opsicli "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || poetry run opsi-dev-tool -l info --binary-push dist/opsicli'
