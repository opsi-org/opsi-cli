image: docker.uib.gmbh/opsi/dev/pybuilder:uib-python-3.10

stages:
  - test
  - build
  - package
  - test

pytest-darwin:
  stage: test
  tags:
    - macos_catalina
  script:
    - poetry lock --no-update
    - poetry install
    - poetry run pytest --tb=short -o junit_family=xunit2 --junitxml=testreport_darwin.xml --cov-append --cov opsicli --cov-report term --cov-report xml -v tests
    - mv .coverage coverage_darwin
  artifacts:
    name: 'opsi-cli_test_darwin'
    paths:
      - coverage.xml
      - testreport_darwin.xml
      - coverage_darwin
    expire_in: 3 days

pytest-windows:
  stage: test
  tags:
    - win10-py310
  script:
    - poetry lock --no-update
    - poetry install
    - poetry run pytest --tb=short -o junit_family=xunit2 --junitxml=testreport_windows.xml --cov-append --cov opsicli --cov-report term --cov-report xml -v tests
    - Rename-Item -Path .coverage -NewName coverage_windows
  artifacts:
    name: 'opsi-cli_test_windows'
    paths:
      - coverage.xml
      - testreport_windows.xml
      - coverage_windows
    expire_in: 3 days

pytest-linux:
  stage: test
  script:
    - poetry lock --no-update
    - poetry install
    - poetry run pytest --tb=short -o junit_family=xunit2 --junitxml=testreport_linux.xml --cov-append --cov opsicli --cov-report term --cov-report xml -v tests
    - mv .coverage coverage_linux
  artifacts:
    name: 'opsi-cli_test_linux'
    paths:
      - coverage.xml
      - testreport_linux.xml
      - coverage_linux
    expire_in: 3 days

pylint-pytest:
  stage: test
  needs:
    # We want to combine test coverage from all test jobs
    - job: pytest-windows
      artifacts: true
    - job: pytest-darwin
      artifacts: true
    - job: pytest-linux
      artifacts: true
  script:
    - apt-get update
    - apt-get --yes install sqlite3
    - poetry lock --no-update
    - poetry install
    - poetry run pylint --disable=R,fixme opsicli plugins tests
    - poetry run flake8 opsicli plugins tests
    - poetry run mypy opsicli tests # mypy on plugin failes because of ruamel being imported somewhere
    - for db in coverage_*; do sqlite3 $db 'update file set path=replace(substr(path,instr(path,"opsicli")),"\","/");'; done
    - echo -e '[run]\nrelative_files = True\n' > .coveragerc
    - poetry run coverage combine coverage_*
    - poetry run coverage xml
    - poetry run coverage report
    - poetry run opsi-dev-tool -l info --testreport-merge testreport_*.xml testreport.xml
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+)%/'
  artifacts:
    name: 'opsi-cli_test'
    paths:
      - coverage.xml
    expire_in: 3 days
    reports:
      junit: testreport.xml


linux-pyinstaller:
  stage: build
  script:
    - export LC_ALL=C.UTF-8
    - poetry lock --no-update
    - poetry install
    - poetry run opsi-dev-cli -l info pyinstaller build
    - dist/opsi-cli --version
    - dist/opsi-cli --non-interactive plugin new cicdtest --version=1.0
    - sed -i 's/import click/import click; import flask/' cicdtest/python/__init__.py
    - dist/opsi-cli -l 7 plugin add cicdtest
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-cli -l info binary push dist/opsi-cli --prerelease="$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-cli -l info binary push dist/opsi-cli'
    - mv dist/opsi-cli CLIENT_DATA/opsi-cli-linux
  artifacts:
    name: opsi-cli-linux
    paths:
      - CLIENT_DATA/opsi-cli-linux

macos-pyinstaller:
  stage: build
  tags:
    - macos_catalina
  script:
    - export LC_ALL=en_US.UTF-8
    - poetry lock --no-update
    - poetry install
    - poetry run opsi-dev-cli -l info pyinstaller build
    - dist/opsi-cli --version
    - dist/opsi-cli --non-interactive plugin new cicdtest --version=1.0
    - sed -i '' 's/import click/import click; import flask/' cicdtest/python/__init__.py
    - dist/opsi-cli -l 7 plugin add cicdtest
    - '[ "$CI_COMMIT_TAG" = "" ] && opsi-dev-cli -l info binary push dist/opsi-cli --prerelease="$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || opsi-dev-cli -l info binary push dist/opsi-cli'
    - mv dist/opsi-cli CLIENT_DATA/opsi-cli-macos
  artifacts:
    name: opsi-cli-macos
    paths:
      - CLIENT_DATA/opsi-cli-macos

windows-pyinstaller:
  stage: build
  tags:
    - win10-py310
  script:
    # build python environment
    - poetry lock --no-update
    - poetry install
    # get opsi-dev-tool
    - Invoke-WebRequest -UseBasicParsing -Uri "$OPSIDEVTOOLS_URL_WINDOWS_X86" -OutFile opsi-dev-tools.zip
    - Expand-Archive opsi-dev-tools.zip -DestinationPath .
    - .\opsi-dev-tool.exe --self-install
    # build opsi-cli binary
    - poetry run .\opsi-dev-cli.exe -l info pyinstaller build
    # test opsi-cli binary
    - dist\opsi-cli.exe --version
    - dist\opsi-cli.exe --non-interactive plugin new cicdtest --version=1.0
    - (get-content cicdtest\python\__init__.py) | %{$_ -replace "import click","import click; import flask"} | Out-File -encoding ascii cicdtest\python\__init__.py
    - dist\opsi-cli.exe -l 7 plugin add cicdtest
    - .\opsi-dev-cli.exe -l info --output-format simple virustotal check dist\opsi-cli.exe --allow-detections=5  # TODO: remove
    # sign opsi-cli binary
    - .\opsi-dev-tool.exe -l info --signserver-sign dist\opsi-cli.exe
    # virus check of opsi-cli binary
    - .\opsi-dev-cli.exe -l info --output-format simple virustotal check dist\opsi-cli.exe --allow-detections=5
    # upload and archive opsi-cli binary
    - if (! $CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info binary push dist\opsi-cli.exe --prerelease="$CI_JOB_ID"}
    - if ($CI_COMMIT_TAG) {.\opsi-dev-cli.exe -l info binary push dist\opsi-cli.exe}
    - move dist\opsi-cli.exe CLIENT_DATA\opsi-cli-windows.exe
  artifacts:
    name: opsi-cli-windows.exe
    paths:
      - CLIENT_DATA\opsi-cli-windows.exe


makeopsipackage:
  stage: package
  script:
    # Disregard any information from OPSI and write controlfile according to pyproject.toml version and CI_JOB_ID
    - version=$(cat pyproject.toml | grep -e "^version = " | cut -d \" -f 2)
    - package=1
    - '[ "$CI_COMMIT_TAG" = "" ] && sed -i "0,/version: $package\$/s/version: $package\$/version: $package.$CI_JOB_ID/" OPSI/control'
    - 'sed -i "/Product/,/version:/s/version: .*\$/version: $version/" OPSI/control'
    - opsi-makepackage --no-set-rights -l 6
    - upload-package opsi-cli*.opsi


test_all_systems:
  stage: test
  script:
    - opsi-dev-cli -l info jenkins test
  only:
    - tags

test_all_systems_manual:
  stage: test
  script:
    - opsi-dev-cli -l info jenkins test
  when: manual
